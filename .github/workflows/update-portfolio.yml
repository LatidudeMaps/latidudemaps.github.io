name: Update Portfolio Data

on:
  # Si attiva quando viene fatto push su questo repository
  push:
    branches:
      - main
      - master
  
  # Si attiva ogni 6 ore
  schedule:
    - cron: '0 */6 * * *'
  
  # Si attiva quando un repository viene aggiornato (attraverso webhook)
  repository_dispatch:
    types:
      - repository-updated
  
  # Permette l'attivazione manuale
  workflow_dispatch:

jobs:
  update-portfolio:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      repository-projects: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install @octokit/rest gray-matter

      - name: Create directories
        run: |
          mkdir -p public/portfolio-media
          mkdir -p public/data

      - name: Update portfolio data
        run: |
          echo "Starting portfolio update with token permissions:"
          echo "Token Permissions: ${{ toJson(github.token_permissions) }}"
          node .github/scripts/update-portfolio-auto.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Optimize images
        run: |
          sudo apt-get update
          sudo apt-get install -y jpegoptim pngquant
          find public/portfolio-media -type f -name "*.jpg" -exec jpegoptim --max=85 {} \;
          find public/portfolio-media -type f -name "*.png" -exec pngquant --force --quality=65-80 {} \;

      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public/data/portfolio-data.json public/portfolio-media
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update portfolio data and media" && git push)

      - name: Check for validation errors
        if: failure()
        run: |
          echo "::error::Portfolio update failed. Please check the logs for more details."